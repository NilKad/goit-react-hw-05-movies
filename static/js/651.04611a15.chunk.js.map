{"version":3,"file":"static/js/651.04611a15.chunk.js","mappings":"iQAEaA,E,OAAaC,GAAAA,KAAH,4D,kBCyDvB,EArDe,WACb,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCP,EAAAA,EAAAA,UAAS,IAA/C,eAAOQ,EAAP,KAAoBC,EAApB,KAcMC,EAAiB,mCAAG,WAAMC,GAAN,wFACJC,EAAAA,EAAAA,IAAaD,GADT,OAClBE,EADkB,OAExBX,EAAaW,EAAMC,KAAKC,SAFA,2CAAH,sDAiBvB,OAZAC,EAAAA,EAAAA,YAAU,WACJV,EAAaW,IAAI,UAAYX,EAAaW,IAAI,WAAad,IAC7DC,EAAcE,EAAaW,IAAI,UAC/BR,EAAeH,EAAaW,IAAI,UAEnC,GAAE,CAACd,EAAYG,KAEhBU,EAAAA,EAAAA,YAAU,WACW,KAAfb,GACJO,EAAkBP,EACnB,GAAE,CAACA,KAGF,iCACE,UAACL,EAAD,CAAYoB,SA1BK,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOC,YAAYC,MACnCpB,EAAciB,GACdd,EAAgB,CAAEc,MAAAA,GACnB,EAqBG,WACE,kBACEI,KAAK,OACLC,KAAK,cACLC,WAAS,EACTC,aAAa,MACbJ,MAAOhB,EACPqB,SAtCkB,SAAAV,GACxB,IAAMK,EAAQL,EAAEG,OAAOE,MACvBf,EAAee,EAChB,KAqCK,mBAAQC,KAAK,SAAb,uBAEDxB,EAAU6B,OAAS,IAAK,SAACC,EAAA,EAAD,CAAiBC,SAAU/B,MAGzD,C","sources":["pages/Movies.module.js","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormSearch = styled.form`\n  display: block;\n  width: 350px;\n`;\n","import { useState, useEffect } from 'react';\nimport { MoviesSearch } from 'components/API/FetchFilms';\nimport { useSearchParams } from 'react-router-dom';\nimport { FormSearch } from './Movies.module';\nimport RenderFilmsList from 'components/RenderFilmsList/RenderFilmsList';\n\nconst Movies = () => {\n  const [filmsList, setFilmsList] = useState([]);\n  const [searchFilm, setSearchFilm] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [queryString, setQueryString] = useState('');\n\n  const updateQueryString = e => {\n    const value = e.target.value;\n    setQueryString(value);\n  };\n\n  const searchSubmit = e => {\n    e.preventDefault();\n    const query = e.target.searchFilms.value;\n    setSearchFilm(query);\n    setSearchParams({ query });\n  };\n\n  const searchSubmitFilms = async searchQuery => {\n    const films = await MoviesSearch(searchQuery);\n    setFilmsList(films.data.results);\n  };\n\n  useEffect(() => {\n    if (searchParams.get('query') && searchParams.get('query') !== searchFilm) {\n      setSearchFilm(searchParams.get('query'));\n      setQueryString(searchParams.get('query'));\n    }\n  }, [searchFilm, searchParams]);\n\n  useEffect(() => {\n    if (searchFilm === '') return;\n    searchSubmitFilms(searchFilm);\n  }, [searchFilm]);\n\n  return (\n    <>\n      <FormSearch onSubmit={searchSubmit}>\n        <input\n          type=\"text\"\n          name=\"searchFilms\"\n          autoFocus\n          autoComplete=\"off\"\n          value={queryString}\n          onChange={updateQueryString}\n        />\n        <button type=\"submit\">Search</button>\n      </FormSearch>\n      {filmsList.length > 0 && <RenderFilmsList filmList={filmsList} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["FormSearch","styled","useState","filmsList","setFilmsList","searchFilm","setSearchFilm","useSearchParams","searchParams","setSearchParams","queryString","setQueryString","searchSubmitFilms","searchQuery","MoviesSearch","films","data","results","useEffect","get","onSubmit","e","preventDefault","query","target","searchFilms","value","type","name","autoFocus","autoComplete","onChange","length","RenderFilmsList","filmList"],"sourceRoot":""}